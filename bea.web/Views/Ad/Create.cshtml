@model Bea.Models.AdCreateModel
@{
    ViewBag.Title = "Create";
}
<div class="hero-unit">
    <h1>Créez votre annonce !
    </h1>
    <p class="tagline">
        C'est simple et gratuit. Remplissez le formulaire ci-dessous, cliquez sur le lien que nous vous envoyons par email et voila, votre annonce est en ligne !
    </p>
</div>



@using (Html.BeginForm("Create", "Ad", FormMethod.Post, new { @class = "well form-horizontal" }))
{       
    <div class="row">

        <div class="span6">

            <h4><i class="icon-globe"></i>&nbsp;Localisation</h4>
            <div class="control-group">
                <label class="control-label" for="inputProvince">@Html.LabelFor(model => model.SelectedProvinceId)</label>
                <div class="controls controls-row">
                    @Html.DropDownListFor(model => model.SelectedProvinceId, Enumerable.Empty<SelectListItem>(), "Choisissez la province", new { @class = "input-large" })
                    @Html.ValidationMessageFor(model => model.SelectedProvinceId, String.Empty, new { @class = "label label-important" })
                </div>

                <label class="control-label" for="inputCity">@Html.LabelFor(model => model.SelectedCityId)</label>
                <div class="controls controls-row">
                    @Html.DropDownListFor(model => model.SelectedCityId, Enumerable.Empty<SelectListItem>(), "Choisissez la ville", new { @class = "input-large" })
                    @Html.ValidationMessageFor(model => model.SelectedCityId, String.Empty, new { @class = "label label-important" })
                </div>
            </div>

            <h4><i class="icon-user"></i>&nbsp;Vos informations</h4>
            <div class="control-group">
                <label class="control-label" for="inputName">@Html.LabelFor(model => model.Name)</label>
                <div class="controls controls-row">
                    @Html.TextBoxFor(model => model.Name, new { @class = "input-large", rel = "tooltip" })
                    @Html.ValidationMessageFor(model => model.Name, String.Empty, new { @class = "label label-important" })
                </div>

                <label class="control-label" for="inputEmail">@Html.LabelFor(model => model.Email)</label>
                <div class="controls controls-row">
                    @Html.TextBoxFor(model => model.Email, new { @class = "input-large", rel = "tooltip" })
                    @Html.ValidationMessageFor(model => model.Email, String.Empty, new { @class = "label label-important" })
                </div>

                <label class="control-label" for="inputPhone">@Html.LabelFor(model => model.Telephone)</label>
                <div class="controls controls-row">
                    @Html.TextBoxFor(model => model.Telephone, new { @class = "input-large", rel = "tooltip" })
                    @Html.ValidationMessageFor(model => model.Telephone, String.Empty, new { @class = "label label-important" })
                </div>
            </div>

            <h4><i class="icon-th-list"></i>&nbsp;Categorie</h4>
            <div class="control-group">
                <label class="control-label" for="inputCategory">@Html.LabelFor(model => model.SelectedCategoryId)</label>
                <div class="controls controls-row">
                    @Html.DropDownListFor(model => model.SelectedCategoryId, Enumerable.Empty<SelectListItem>(), "Choisissez la catégorie", new { @class = "input-large" })
                    @Html.ValidationMessageFor(model => model.SelectedCategoryId, String.Empty, new { @class = "label label-important" })
                </div>

                <label class="control-label " for="inputIsOffer">@Html.LabelFor(model => model.IsOffer)</label>
                <div class="controls controls-row">
                    <label class="checkbox inline">@Html.RadioButtonFor(model => model.IsOffer, true, new { @checked = "checked", @style = "vertical-align: top" }) Offre</label>
                    <label class="checkbox inline">@Html.RadioButtonFor(model => model.IsOffer, false, new { @style = "vertical-align: top" }) Demande</label>
                </div>
            </div>
        </div>

        <div class="span5">
            @Html.Partial("Shared/Create/_ImageUpload", Model)
        </div>

    </div>
    
    <h4><i class="  icon-pencil"></i>&nbsp;Votre annonce</h4>
    <div class="control-group">
        <label class="control-label" for="inputTitle">@Html.LabelFor(model => model.Title)</label>
        <div class="controls controls-row">
            @Html.TextBoxFor(x => x.Title, new { @class = "input-xxlarge" })
            @Html.ValidationMessageFor(model => model.Title, String.Empty, new { @class = "label label-important" })
        </div>

        <div id="parameters">
            @if (Model is Bea.Models.Create.Vehicules.AdCarCreateModel)
            {
                @Html.Partial("Shared/Create/_CarAdCreate", Model);
            }
            @if (Model is Bea.Models.Create.Vehicules.AdMotoCreateModel)
            {
                @Html.Partial("Shared/Create/_MotoAdCreate", Model);
            }
            @if (Model is Bea.Models.Create.Vehicules.AdOtherVehicleCreateModel)
            {
                @Html.Partial("Shared/Create/_OtherVehicleAdCreate", Model);
            }
            @if (Model is Bea.Models.Create.Vehicules.AdVehicleCreateModel)
            {
                @Html.Partial("Shared/Create/_VehicleAdCreate", Model);
            }
            @if (Model is Bea.Models.Create.WaterSport.AdMotorBoatCreateModel)
            {
                @Html.Partial("Shared/Create/_MotorBoatAdCreate", Model);
            }
        </div>

        <label class="control-label" for="inputBody">@Html.LabelFor(model => model.Body)</label>
        <div class="controls controls-row">
            @Html.TextAreaFor(model => model.Body, new { @rows = 10, @class = "input-xxlarge", style = "resize: none;" })
            @Html.ValidationMessageFor(model => model.Body, String.Empty, new { @class = "label label-important" })
        </div>
        <br />

        <div class="control-group">
            <label class="control-label" for="inputPrice">@Html.LabelFor(model => model.Price)</label>
            <div class="controls controls-row">
                @Html.TextBoxFor(model => model.Price, new { @class = "input-large" })
                @Html.ValidationMessageFor(model => model.Price, String.Empty, new { @class = "label label-important" })
            </div>
        </div>
    </div>
      
    <div class="control-group">
        <div class="controls">
            <button id="submitButton" type="submit" class="btn btn-primary">Valider</button>
        </div>
    </div>
}


<script type="text/javascript">
    var isLoad = false;
    $(document).ready(function () {
        //Refreshes the city list when user chenges province
        $('#SelectedProvinceId').change(function () {
            if ($(this).val()) {
                //The user selected a province
                var provinceId = $('#SelectedProvinceId').val();
                var url = '@Url.RouteUrl("ActionApi", new { httproute = "", controller = "LocationApi", action = "GetCitiesFromProvince", provinceId = "id" })'.replace("id", provinceId);
                $.ajax({
                    url: url,
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        $('#SelectedCityId').empty();
                        $('#SelectedCityId').append($('<option/>', {
                            value: "",
                            text: "Choisissez la ville"
                        }));
                        $(data).each(function () {
                            var option = $('<option />');
                            option.attr('value', this.Id).text(this.Label);
                            $('#SelectedCityId').append(option);
                        });
                        var selectedCityId = '@Model.SelectedCityId';
                        if (selectedCityId != null) {
                            console.log(selectedCityId);
                            $('#SelectedCityId').val(selectedCityId);
                        }
                    }
                });
            }
            else {
                //The user selected "Choisissez la province"
                $('#SelectedCityId').empty();
                $('#SelectedCityId').append($('<option/>', {
                    value: "",
                    text: "Choisissez la ville"
                }));
            }
        });

        $('#SelectedCategoryId').change(function () {
            if ($(this).val()) {
                //The user selected a province
                var categoryId = $('#SelectedCategoryId').val();

                var url = '@Url.RouteUrl("DefaultWithParameter", new { httproute = "", controller = "Ad", action = "AddParamters", categoryId = "id" })'.replace("id", categoryId);
                $.ajax({
                    url: url,
                    type: 'GET',
                    success: function (data) {
                        $('#parameters').html("");
                        $('#parameters').html(data);
                    }
                });
            }
        });

        $('#Name').tooltip({ 'trigger': 'focus', 'title': 'Votre nom sera affiche dans l\'annonce', 'placement': 'right' });
        $('#Email').tooltip({ 'trigger': 'focus', 'title': 'Votre Email ne sera pas affiche dans l\'annonce', 'placement': 'right' });
        $('#Telephone').tooltip({ 'trigger': 'focus', 'title': 'Exemple: 123456', 'placement': 'right' });

        //Fill the province list
        var url = '@Url.RouteUrl("ActionApi", new { httproute = "", controller = "LocationApi", action = "GetAllProvinces" })';
        $.ajax({
            url: url,
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                $('#SelectedProvinceId').empty();
                $('#SelectedProvinceId').append($('<option/>', {
                    value: "",
                    text: "Choisissez la province"
                }));
                $(data).each(function () {
                    var option = $('<option />');
                    option.attr('value', this.Id).text(this.Label);
                    $('#SelectedProvinceId').append(option);
                });

                var selectedProvinceId = '@Model.SelectedProvinceId';
                if (selectedProvinceId != null) {

                    $('#SelectedProvinceId').val(selectedProvinceId);
                    $('#SelectedProvinceId').trigger('change');
                    var selectedCityId = '@Model.SelectedCityId';
                    if (selectedCityId != null && isLoad == true) {
                        console.log(selectedCityId);
                        $('#SelectedCityId').val(selectedCityId);
                        isLoad = false;
                    }
                }
            }
        });



        //Fill the category list
        var url = '@Url.RouteUrl("ActionApi", new { httproute = "", controller = "CategoryApi", action = "GetAllCategories" })';
        $.ajax({
            url: url,
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                $('#SelectedCategoryId').empty();
                $('#SelectedCategoryId').append($('<option/>', {
                    value: "",
                    text: "Choisissez la categorie"
                }));
                $(data).each(function () {
                    var option = $('<option />');
                    option.attr('value', this.Id).text(this.Label);
                    $('#SelectedCategoryId').append(option);
                });
                var selectedCategoryId = '@Model.SelectedCategoryId';
                if (selectedCategoryId != null) {
                    $('#SelectedCategoryId').val(selectedCategoryId);
                    isLoad = true;
                }
            }
        });
    });
</script>
