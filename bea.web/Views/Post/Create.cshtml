
@model Bea.Models.Create.AdvancedAdCreateModel
@{
    ViewBag.Title = "Create";
}
<div class="hero-unit">
    <h3>Créez votre annonce !
    </h3>
    <p class="tagline">
        C'est simple et gratuit. Remplissez le formulaire ci-dessous, cliquez sur le lien que nous vous envoyons par email et voila, votre annonce est en ligne !
    </p>
</div>


@using (Html.BeginForm("Create", "Post", FormMethod.Post))
{   
    
    <dl class="dl-horizontal">
        <div class="row">
            <div class="span7">
                <div class="legend-like"><i class="icon-globe"></i>&nbsp;&nbsp;Localisation</div>
                <dt>Province:</dt>
                <dd>
                    @Html.DropDownListFor(model => model.SelectedProvinceId, Enumerable.Empty<SelectListItem>(), "Choisissez la province", new { @class = "input-large" })
                    @Html.ValidationMessageFor(model => model.SelectedProvinceId, String.Empty, new { @class = "label label-important" })
                </dd>
                <dt>Ville:</dt>
                <dd>
                    @Html.DropDownListFor(model => model.SelectedCityId, Enumerable.Empty<SelectListItem>(), "Choisissez la ville", new { @class = "input-large" })
                    @Html.ValidationMessageFor(model => model.SelectedCityId, String.Empty, new { @class = "label label-important" })
                </dd>

                <div class="legend-like"><i class="icon-user"></i>&nbsp;&nbsp;Vos informations</div>
                <dt>Votre nom:</dt>
                <dd>
                    @Html.TextBoxFor(model => model.Name, new { @class = "input-large", rel = "tooltip" })
                    @Html.ValidationMessageFor(model => model.Name, String.Empty, new { @class = "label label-important" })
                </dd>
                <dt>Email:</dt>
                <dd>
                    @Html.TextBoxFor(model => model.Email, new { @class = "input-large", rel = "tooltip" })
                    @Html.ValidationMessageFor(model => model.Email, String.Empty, new { @class = "label label-important" })
                </dd>
                <dt>Téléphone:</dt>
                <dd>
                    @Html.TextBoxFor(model => model.Telephone, new { @class = "input-large", rel = "tooltip" })
                    @Html.ValidationMessageFor(model => model.Telephone, String.Empty, new { @class = "label label-important" })
                </dd>

                <div class="legend-like"><i class="icon-th-list"></i>&nbsp;&nbsp;Categorie</div>
                <dt>Catégorie:</dt>
                <dd>
                    @Html.DropDownListFor(model => model.SelectedCategoryId, Enumerable.Empty<SelectListItem>(), "Choisissez la catégorie", new { @class = "input-large", id = "categories" })
                    @Html.ValidationMessageFor(model => model.SelectedCategoryId, String.Empty, new { @class = "label label-important" })
                </dd>
                <dt>Type d'annonce:</dt>
                <dd>
                    <div class="controls controls-row">
                        <label class="checkbox inline">@Html.RadioButtonFor(model => model.IsOffer, true, new { @checked = "checked", @style = "vertical-align: top" }) Offre</label>
                        <label class="checkbox inline">@Html.RadioButtonFor(model => model.IsOffer, false, new { @style = "vertical-align: top" }) Demande</label>
                    </div>
                </dd>
                <dd>&nbsp;</dd>
            </div>
            <div class="span5">
                <div class="legend-like"><i class="icon-camera"></i>&nbsp;&nbsp;Vos photos</div>
                @Html.Partial("Shared/Create/_ImageUpload", Model)
                
            </div>
        </div>
        <div class="row">
            <div class="span9">
                <div class="legend-like"><i class="  icon-pencil"></i>&nbsp;&nbsp;Votre annonce</div>
                <dt>Titre de l'annonce:</dt>
                <dd>
                    @Html.TextBoxFor(x => x.Title, new { @class = "input-xxlarge" })
                    @Html.ValidationMessageFor(model => model.Title, String.Empty, new { @class = "label label-important" })
                </dd>
                <div id="parameters">
            @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.CarAd)
            {
                @Html.Partial("Shared/Create/_CarAdCreate", Model);
            }
            @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.MotoAd)
            {
                @Html.Partial("Shared/Create/_MotoAdCreate", Model);
            }
            @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.OtherVehiculeAd)
            {
                @Html.Partial("Shared/Create/_OtherVehicleAdCreate", Model);
            }
            @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.VehiculeAd)
            {
                @Html.Partial("Shared/Create/_VehicleAdCreate", Model);
            }
            @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.MotorBoatAd)
            {
                @Html.Partial("Shared/Create/_MotorBoatAdCreate", Model);
            }
            @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.SailingBoatAd)
            {
                @Html.Partial("Shared/Create/_SailingBoatAdCreate", Model);
            }
            @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.MotorBoatEngineAd)
            {
                @Html.Partial("Shared/Create/_MotorBoatEngineAdCreate", Model);
            }
            @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.WaterSportAd)
            {
                @Html.Partial("Shared/Create/_WaterSportAdCreate", Model);
            }
             @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.RealEstateAd)
            {
                @Html.Partial("Shared/Create/_RealEstateAdCreate", Model);
            }
        </div>
                <dt>Corps de l'annonce:</dt>
                <dd>
                    @Html.TextAreaFor(model => model.Body, new { @rows = 10, @class = "input-xxlarge", style = "resize: none;" })
                    @Html.ValidationMessageFor(model => model.Body, String.Empty, new { @class = "label label-important" })
                </dd>
                <dt>Prix:</dt>
                <dd>
                    @Html.TextBoxFor(model => model.Price, new { @class = "input-large" })
                    @Html.ValidationMessageFor(model => model.Price, String.Empty, new { @class = "label label-important" })
                </dd>
            </div>
        </div>
        <dd>&nbsp;</dd>
        <dd>
            @Html.AntiForgeryToken()
            @Html.ActionLink("Annuler", "Index", new { controller = "Home" }, new { @class = "btn" })
            <button id="submitButton" type="submit" class="btn btn-primary">Valider</button>
        </dd>
    </dl>

           @*

        
    <h4><i class="  icon-pencil"></i>&nbsp;Votre annonce</h4>
    <div class="control-group">
        <label class="control-label" for="inputTitle">Titre de l'annonce:</label>
        <div class="controls controls-row">
            @Html.TextBoxFor(x => x.Title, new { @class = "input-xxlarge" })
            @Html.ValidationMessageFor(model => model.Title, String.Empty, new { @class = "label label-important" })
        </div>

        <div id="parameters">
            @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.CarAd)
            {
                @Html.Partial("Shared/Create/_CarAdCreate", Model);
            }
            @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.MotoAd)
            {
                @Html.Partial("Shared/Create/_MotoAdCreate", Model);
            }
            @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.OtherVehiculeAd)
            {
                @Html.Partial("Shared/Create/_OtherVehicleAdCreate", Model);
            }
            @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.VehiculeAd)
            {
                @Html.Partial("Shared/Create/_VehicleAdCreate", Model);
            }
            @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.MotorBoatAd)
            {
                @Html.Partial("Shared/Create/_MotorBoatAdCreate", Model);
            }
            @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.SailingBoatAd)
            {
                @Html.Partial("Shared/Create/_SailingBoatAdCreate", Model);
            }
            @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.MotorBoatEngineAd)
            {
                @Html.Partial("Shared/Create/_MotorBoatEngineAdCreate", Model);
            }
            @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.WaterSportAd)
            {
                @Html.Partial("Shared/Create/_WaterSportAdCreate", Model);
            }
             @if (Model.Type == Bea.Domain.Ads.AdTypeEnum.RealEstateAd)
            {
                @Html.Partial("Shared/Create/_RealEstateAdCreate", Model);
            }
        </div>

        <label class="control-label" for="inputBody">Texte de l'annonce:</label>
        <div class="controls controls-row">
            @Html.TextAreaFor(model => model.Body, new { @rows = 10, @class = "input-xxlarge", style = "resize: none;" })
            @Html.ValidationMessageFor(model => model.Body, String.Empty, new { @class = "label label-important" })
        </div>
        <br />

        <div class="control-group">
            <label class="control-label" for="inputPrice">Prix:</label>
            <div class="controls controls-row">
                @Html.TextBoxFor(model => model.Price, new { @class = "input-large" })
                @Html.ValidationMessageFor(model => model.Price, String.Empty, new { @class = "label label-important" })
            </div>
        </div>
    </div>
    
    <div class="control-group">
        <div class="controls">
            @Html.AntiForgeryToken()
            <button id="submitButton" type="submit" class="btn btn-primary">Valider</button>
        </div>
    </div>*@
        
}


<script type="text/javascript">
    var isLoad = false;
    $(document).ready(function () {
        //Refreshes the city list when user chenges province
        $('#SelectedProvinceId').change(function () {
            if ($(this).val()) {
                //The user selected a province
                var provinceId = $('#SelectedProvinceId').val();
                var url = '@Url.RouteUrl("ActionApi", new { httproute = "", controller = "LocationApi", action = "GetCitiesFromProvince", provinceId = "id" })'.replace("id", provinceId);
                $.ajax({
                    url: url,
                    type: 'GET',
                    dataType: 'json',
                    success: function (data) {
                        $('#SelectedCityId').empty();
                        $('#SelectedCityId').append($('<option/>', {
                            value: "",
                            text: "Choisissez la ville"
                        }));
                        $(data).each(function () {
                            var option = $('<option />');
                            option.attr('value', this.Id).text(this.Label);
                            $('#SelectedCityId').append(option);
                        });
                        var selectedCityId = '@Model.SelectedCityId';
                        if (selectedCityId != null) {
                            console.log(selectedCityId);
                            $('#SelectedCityId').val(selectedCityId);
                        }
                    }
                });
            }
            else {
                //The user selected "Choisissez la province"
                $('#SelectedCityId').empty();
                $('#SelectedCityId').append($('<option/>', {
                    value: "",
                    text: "Choisissez la ville"
                }));
            }
        });

        $('#categories').change(function () {
            if ($(this).val()) {
                //The user selected a province
                var categoryId = $('#categories').val();
                var url = '@Url.RouteUrl("DefaultWithParameter", new { httproute = "", controller = "Post", action = "AddParamters", categoryId = "id" })'.replace("id", categoryId);
                $.ajax({
                    url: url,
                    type: 'GET',
                    success: function (data, textStatus, jqXHR) {
                        $('#parameters').html("");
                        if (jqXHR.responseText != "")
                            $('#parameters').html(data);
                    }
                });
            }
        });

        $('#Name').tooltip({ 'trigger': 'focus', 'title': 'Votre nom sera affiche dans l\'annonce', 'placement': 'right' });
        $('#Email').tooltip({ 'trigger': 'focus', 'title': 'Votre Email ne sera pas affiche dans l\'annonce', 'placement': 'right' });
        $('#Telephone').tooltip({ 'trigger': 'focus', 'title': 'Exemple: 123456', 'placement': 'right' });

        //Fill the province list
        var url = '@Url.RouteUrl("ActionApi", new { httproute = "", controller = "LocationApi", action = "GetAllProvinces" })';
        $.ajax({
            url: url,
            type: 'GET',
            dataType: 'json',
            success: function (data) {
                $('#SelectedProvinceId').empty();
                $('#SelectedProvinceId').append($('<option/>', {
                    value: "",
                    text: "Choisissez la province"
                }));
                $(data).each(function () {
                    var option = $('<option />');
                    option.attr('value', this.Id).text(this.Label);
                    $('#SelectedProvinceId').append(option);
                });

                var selectedProvinceId = '@Model.SelectedProvinceId';
                if (selectedProvinceId != null) {

                    $('#SelectedProvinceId').val(selectedProvinceId);
                    $('#SelectedProvinceId').trigger('change');
                    var selectedCityId = '@Model.SelectedCityId';
                    if (selectedCityId != null && isLoad == true) {
                        console.log(selectedCityId);
                        $('#SelectedCityId').val(selectedCityId);
                        isLoad = false;
                    }
                }
            }
        });



        //Fill the category list
        $.getJSON('@Url.RouteUrl("ActionApi", new { httproute = "", controller = "CategoryApi", action = "GetAllCategoriesAndGroups" })', function (result) {
            var ddl = $('#categories');
            ddl.empty();
            $(document.createElement('option'))
                    .attr('value', "")
                    .text("Choisissez la categorie")
                    .appendTo(ddl);
            $(result).each(function () {
                var selected = (this.Id == "@Model.SelectedCategoryId");
                var optionElement = $(document.createElement('option'))
                    .attr('value', this.Id)
                    .attr('selected', selected)
                    .text(this.Label);

                if (this.IsGroup) {
                    optionElement.attr('disabled', 1);
                    optionElement.attr('style', 'color: #006DCC;');
                }

                optionElement.appendTo(ddl);
            });
        });
    });
</script>
